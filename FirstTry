#import speech recognition package from google api
import speech_recognition as sr
import playsound #to play mp3 local files
import gTTs #google text to speech
import os  #to save/open files
import wolframalpha #to conduct mathematical calc
from selenium import webdriver #to control web operations

#tts = gtts.tts.gTTS(text='Hello', lang='en')
#tts.save("hello.mp3")
num=1
def assistant_speaks(output):
    global num
    
#num to rename audio files with different names to remove ambiguity
    num+=1
    print("Panda: ", output)

    toSpeak=gTTs(text = output, lang = 'en', slow = False)
#saving the audio file given by google text to speech
    file = str(num)+".mp3"
    toSpeak.save(file)
    

#playsound package used to play the same file
    playsound.playsound(file,True)
    os.remove(file)

def get_audio():
    rObject = sr.Recognizer()
    audio=''
    
    with sr.Microphone() as source:
        print("Speak...")
        
        #recording the audio using speech recognition
        audio = rObject.listen(source,phrase_time_limit=5)
    print("Stop") #time limit is 5
    try:
        
        text = rObject.recognize_google(audio, language='en_US')
        print("You: ",text)
        return text
    except:
        
        assistant_speaks("Could not understand the audio, please speak again!")
        return 0
    
#driver code
if __name__ == "__main__":
    assistant_speaks("What's your name, human?")
    name = 'Human'
    name = get_audio()
    assistant_speaks("Hello"+name+".")
    
    while(1):
         assistant_speaks("What can I do for you?")
         text = get_audio().lower()
         
         if text==0:
             continue
         if "exit" in str(text) or "bye" in str(text) or "sleep" in str(text):
             assistant_speaks("Ok bye"+name+".")
             break
         
         #calling process text to process the query
         process_text(text)
        
#########################################################################################################

def process_text(input):
    
    try:
        
        if "search" in input or "play" in input:
            #a web search using selenium
            search_web(input)
            return
        
        elif "Who are you" in input or "define yourself" in input:
            speak = '''Hello, I am Panda, Your Personal Assistant.
                             I am here to make your life easier. You can command me
                             to perform tasks such as calculating sum or opening
                             applications,etcetera'''
            assistant_speaks(speak)
            return
        
        elif "who made you" in input or "Who created you" in input:
            speak = "I have been created by Sejal"
            assistant_speaks(speak)
            return
        
        elif "calculate" in input.lower():
                #wolrfram alpha id
                app_id = "A5HVRL-2XJU4KT6V7"
                client = wolframalpha.Client(app_id)
                
                indx = input.lower().split().index('calculate')
                query = input.split()[indx+1:]
                res = client.query(''.join(query))
                answer=next(res.results).text
                assistant_speaks("The answer is"+answer)
                return
            
        elif 'open' in input:
            #different applications to open
            open_application(input.lower())
            return
        
        else:
            
            assistant_speaks("I can search the web for you, Do you want to continue?")
            ans=get_audio()
            
            if 'yes' in str(ans) or 'yeah' in str(ans):
                search_web(input)
            
            else:
                return
            
    except:
        assistant_speaks("I don't understand, I can search the web for you, do you want to continue?")
        ans = get_audio()
        if 'yes' in str(ans) or 'yeah' in str(ans):
            search_web(input)
            
################################################################################################################

def search_web(input):
    driver = webdriver.Firefox()
    driver.implicitly.wait(1)
    driver.maximize_window()
    
    if 'youtube' in input.lower():
        assistant_speaks("Opening in youtube")
        indx=input.lower().split().index('youtube')
        query = input.split()[indx+1:]
        driver.get("https://www.youtube.com/results?search_query="+'+'.join(query))
        return
    
    elif 'wikipedia' in input.lower():
        assistant_speaks("Opening in wikipedia")
        indx = input.lower().split().index('wikipedia')
        query = input.split()[indx+1:]
        driver.get("https://en.wikipedia.org/wiki/"+'_'.join(query))
        return
    
    else:
        
        if 'google' in input.lower():
            indx=input.lower().split().index('google')
            query=input.split()[indx+1:]
            driver.get("https://www.google.com/search?q"+'+'.join(query))
            return
        
        elif 'search' in input.lower():
            indx=input.lower().split().index('search')
            query=input.split()[indx+1:]
            driver.get("https://www.google.com/search?q"+'+'.join(query))
            
        else:
            driver.get("https://www.google.com/search?q"+'+'.join(input.split()))
            return
        
def open_application(input):
    
    if 'chrome' in input:
        assistant_speaks("Google Chrome")
        os.startfile('C:\Program Files (x86)\Google\Chrome\Application\chrome.exe')
        return
    
    elif 'firefox' in input:
        assistant_speaks("Mozilla Firefox")
        os.startfile('C:\Program Files (x86)\Mozilla Firefox\firefox.exe')
        return
    
    else:
        assistant_speaks("Application not available")
        return
    
     
